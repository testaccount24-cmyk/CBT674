/* rexx */
/*-------------------------------------------------------------------*/
/* This sort routine is a generic routine that allows table sorting  */
/* on all fields in a table. The table is queried to get a list of   */
/* keys and names, and a temporary table is created to display them  */
/* in a popup window. From here, the user may specify either 'A' for */
/* ascending or 'D' for descending for each field.                   */
/*-------------------------------------------------------------------*/
Arg Tab_Name

Signal On Failure Name Exec_Failure
Signal On Syntax  Name Exec_Failure
Signal On Novalue Name Exec_Failure

Address TSO
"ALLOCATE F(SORTTB) NEW DELETE" ,
  "SPACE(2) TRACKS DIR(5)" ,
  "DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(3120)"

Call Load_Table
Call Display_Table
Call Sort_Table

Address TSO
"FREE F(SORTTB)"

Return
/*-------------------------------------------------------------------*/
/*- The exec failed somewhere. Make sure everything is closed.      -*/
/*-------------------------------------------------------------------*/
Exec_Failure:
Address ISPEXEC
Say 'Internal error on line' sigl'. Sort failed. RC='RC
"CONTROL ERRORS RETURN"
"TBEND SORTTB"
"LIBDEF SORTTB"
Address TSO
"FREE F(SORTTB)"
Exit 12
/*-------------------------------------------------------------------*/
/*- Load up the table with the passed table's field names.          -*/
/*-------------------------------------------------------------------*/
Load_Table:

Address ISPEXEC
"TBCREATE SORTTB NAMES(FIELD TYPE) LIBRARY(SORTTB) NOWRITE"
"CONTROL ERRORS RETURN"
"TBQUERY" Tab_Name "KEYS(KEYS) NAMES(NAMES)"
If RC > 0 Then Signal Failure
"CONTROL ERRORS CANCEL"

If KEYS <> '' Then KEYS = Substr(KEYS,2,Length(KEYS)-2)  /* strip'()'*/
If NAMES <> '' Then NAMES = Substr(NAMES,2,Length(NAMES)-2)
Var_List = KEYS NAMES

Do While Words(Var_List) > 0
  Parse Var Var_List Var_Field Var_List
  FIELD = Var_Field
  TYPE = 'C'
  "TBADD SORTTB"
End

"TBSORT SORTTB FIELDS(FIELD,C,A)"

Return
/*-------------------------------------------------------------------*/
/* Display the table.                                                */
/*-------------------------------------------------------------------*/
Display_Table:

Address ISPEXEC
ZTDTOP = 0
Sort_Parms = ''
"ADDPOP ROW(8) COLUMN(55)"
Do Forever
  "TBTOP SORTTB"
  "TBSKIP SORTTB NUMBER("ZTDTOP") NOREAD"
  "TBDISPL SORTTB PANEL(SORTTB) POSITION(CRP) ROWID(ROW)"
  If RC > 4 Then Leave

  Do While ZTDSELS > 0
    Upper LC
    Upper TYPE
    Select
      When LC = 'A' Then Call Update_Sort LC
      When LC = 'D' Then Call Update_Sort LC
      Otherwise "TBPUT SORTTB"
    End
    If ZTDSELS > 1 Then "TBDISPL SORTTB POSITION(CRP) ROWID(ROW)"
    Else ZTDSELS = 0
  End
  LC = ' '

End
"TBCLOSE SORTTB LIBRARY(SORTTB)"
"LIBDEF SORTTB"
"REMPOP"

Return
/*-------------------------------------------------------------------*/
/* Create the sort parms based on the user's line commands.          */
/*-------------------------------------------------------------------*/
Update_Sort:
Arg Sort_Dir

Sort_Parms = Sort_Parms","FIELD","TYPE","Sort_Dir
Address ISPEXEC
"TBDELETE SORTTB"

Return
/*-------------------------------------------------------------------*/
/* Sort the table that was passed, based on the users input.         */
/*-------------------------------------------------------------------*/
Sort_Table:

Sort_Parms = Strip(Sort_Parms,'L',',')
If Sort_Parms = '' Then Return

Address ISPEXEC
"CONTROL ERRORS RETURN"
"TBSORT" Tab_Name "FIELDS("Sort_Parms")"
"CONTROL ERRORS CANCEL"

Return
