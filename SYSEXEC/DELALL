/* rexx */
/*-------------------------------------------------------------------*/
/*- this will delete all datasets beginning with the passed high    -*/
/*- level qualifier. set gdgbases to 'Y' to remove the bases too.   -*/
/*- set alias to Y to remove the single level hlq alias name. set   -*/
/*- test to Y to see what this would do (takes no action).          -*/
/*-------------------------------------------------------------------*/
Arg Hlq Gdgbases Alias Test .

Signal On Failure
Signal On Syntax
Signal On Novalue

Return DeleteAll()
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
Return
/*--------------------------------------------------------------------*/
/* Read in all datasets and pull apart the list.                      */
/*--------------------------------------------------------------------*/
DeleteAll:

If Alias = 'Y' & (Pos('.',Hlq) > 0 | Length(Hlq) > 8) Then Do
  Say 'You requested an alias be deleted,' ,
    'but the alias name is invalid.'
  Return 16
End

If Alias = 'Y' & Gdgbases <> 'Y' Then Do
  Say 'You requested an alias be deleted, but not gdgbases.'
  Return 16
End

Retc = 0
/* delete nonvsam and clusters first */
Call Vector 1
/* now go delete the gdg bases */
If Gdgbases = 'Y' Then Call Vector 2

If Alias = 'Y' Then Do
  If Test = 'Y' Then Say "DELETE '"Hlq"' ALIAS"
  Else Do
    "DELETE '"Hlq"' ALIAS"
    If RC <> 8 & RC > Retc Then Retc = RC
  End
End

Return Retc
/*--------------------------------------------------------------------*/
/* Read in all datasets and pull apart the list.                      */
/*--------------------------------------------------------------------*/
Vector:
Arg Pass

If Sysvar('SYSISPF') = 'ACTIVE' & ,
  (Pos('%',Hlq) > 0 | Pos('*',Hlq) > 0) Then Do
  Call DelMask
  Return
End

x=OutTrap('Idcams.')
"LISTC LEVEL("Hlq")"
x=OutTrap('OFF')
Call ProcessIdcams

Return
/*--------------------------------------------------------------------*/
/* Read in all datasets and pull apart the list.                      */
/*--------------------------------------------------------------------*/
ProcessIdcams:

Do iIdcams = 1 To Idcams.0
  /* NONVSAM ------- MA133.SUPERC.LISTING.P211   */
  /* CLUSTER ------- MA133.CICSTDV6.GENOL70.LIB3 */
  /* GDG BASE ------ MA133.TEST                  */
  Parse Var Idcams.iIdcams Type ' -' '- ' Dsn .
  If Pass = 1 & (Type = 'NONVSAM' | Type = 'CLUSTER') Then Call DelDsn
  If Pass = 2 & Type = 'GDG BASE' Then Call DelDsn
End

Return
/*--------------------------------------------------------------------*/
/* Delete by 3.4 masking. takes a lot longer, but is more flexible.   */
/*--------------------------------------------------------------------*/
DelMask:

Address ISPEXEC

If Pass = 1 Then Do
  If Test = 'Y' Then Do
    Say 'Deleting by a mask and using the TEST' ,
      'option will result in poor performance.'
    Say 'The entire dataset list will have to be processed' ,
      'multiple times.'
    Say 'Slow progress will be marked with SCAN messages.'
  End

  Dsn = ''
  "LMDINIT LISTID(LISTID) LEVEL("Hlq")"
  Do Forever
    "LMDLIST LISTID("LISTID") OPTION(LIST) DATASET(DSN) STATS(YES)"
    If RC > 0 Then Leave
    Select
      When ZDLMIGR = 'YES' Then Call DelDsn
      When ZDLDSORG = 'PS' Then Call DelDsn
      When ZDLDSORG = 'PO' Then Call DelDsn
      When ZDLDSORG = 'VS' & ZDLRECFM <> '?' Then Call DelDsn
      Otherwise Nop
    End
  End
  "LMDLIST LISTID("LISTID") OPTION(FREE)"
  "LMDFREE LISTID("LISTID")"
End

If Test = 'Y' Then Do
  If Pass = 1 Then Say 'Scanning for tape datasets. Please be patient.'
  Else Say 'Scanning for GDG bases. Please be patient.'
End

/* now get what's left over (tape, unknown stuff), or just process */
/* gdg bases. can't tell the difference between bases, alias, or   */
/* tape datasets with the variables that lmdlist sets, so have to  */
/* do it in this round about, hokey way.                           */
Count = 0
Total = 0
Dsn = ''
"LMDINIT LISTID(LISTID) LEVEL("Hlq")"
Do Forever
  "LMDLIST LISTID("LISTID") OPTION(LIST) DATASET(DSN)"
  If RC > 0 Then Leave
  x=OutTrap('Idcams.')
  Address TSO "LISTC ENTRY('"Dsn"')"
  x=OutTrap('OFF')
  Call ProcessIdcams

  If Test = 'Y' Then Do
    Count = Count + 1
    If Count = 10 Then Do
      Total = Total + Count
      Count = 0
      Say 'Scanned' Total 'datasets.'
    End
  End

End
"LMDLIST LISTID("LISTID") OPTION(FREE)"
"LMDFREE LISTID("LISTID")"

Address TSO

Return
/*--------------------------------------------------------------------*/
/* Delete a dataset name.                                             */
/*--------------------------------------------------------------------*/
DelDsn:

If Symbol('DelDone.Dsn') = 'VAR' Then Return
DelDone.Dsn = ''

If Test = 'Y' Then Do
  Say "DELETE '"Dsn"'"
  Return
End

x = Outtrap('Del.')
"DELETE '"Dsn"'"
If RC <> 8 & RC > Retc Then Retc = RC
x = Outtrap('OFF')

Do iDel = 1 To Del.0; Say Del.iDel; End
If RC = 8 & Del.0 > 0 & Left(Del.1,9) = 'IKJ56232I' Then ,
  "DELETE '"Dsn"' NOSCRATCH"

Return
