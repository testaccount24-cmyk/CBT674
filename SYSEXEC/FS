/* rexx */
Arg Source Func .

Signal On Failure
Signal On Syntax
Signal On Novalue

Call Main_Routine

Return
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
Return
/*-------------------------------------------------------------------*/
/*- This will find a Source in the production sas mxg libs.         -*/
/*-------------------------------------------------------------------*/
Main_Routine:

Parmlib = "MA133.TSO.PARMLIB(FS)"

Address ISPEXEC

If Length(Source) = 1 Then Do
  Func = Source
  Source = ''
End

If Source = '' Then Do
  GETLINE = ''
  "VPUT GETLINE SHARED"
  "SELECT CMD(%GETLINE)"
  "VGET (CSR CSRP LINE SCRW PANEL) SHARED"
  UpperLine = Line
  Upper UpperLine
  CmdPos = Pos('COMMAND',UpperLine)
  If CmdPos = 0 | CmdPos > 3 Then
    Parse Var UpperLine 'SOURCLIB(' Source ')'
End

If Source = '' Then Do
  Say 'Enter the Source name you want to find...'
  Pull Source
End
If Source = '' Then Do
  Say 'Source name is missing.'
  Return
End

Edit.0 = 0
Call CheckDsns
If Edit.0 = 0 Then Do
  Say 'Source' Source 'not found.'
  Return
End

If Edit.0 = 1 Then Do
  Dsn = Edit.1 || "(" || Source || ")"
  Call FDSN "'"Dsn"'" Func
  Return
End

Say Source 'was found in the following Source libraries...'
Do iEdit = 1 To Edit.0
  Say iEdit Edit.iEdit
End
Say 'Reply with a valid library number, or anything else to quit.'
Pull Reply
Reply = Strip(Reply)
If Datatype(Reply,'N') = 1 & Reply > 0 & Reply <= Edit.0 Then Do
  Dsn = Edit.Reply || "(" || Source || ")"
  Call FDSN "'"Dsn"'" Func
End

Return
/*-------------------------------------------------------------------*/
/*- check halifax datasets                                          -*/
/*-------------------------------------------------------------------*/
CheckDsns:

Address TSO
"ALLOC F(IN) DA('"Parmlib"') SHR REUSE"
"EXECIO * DISKR IN (STEM Dsn. FINIS"
"FREE F(IN)"
Address ISPEXEC

Sysname = Mvsvar('SYSNAME')
Do iDsn = 1 To Dsn.0
  Dsn.iDsn = Strip(Dsn.iDsn)
  Upper Dsn.iDsn
  If Left(Dsn.iDsn,1) = '*' Then Iterate
  Parse Var Dsn.iDsn Sys Dsn .
  If Sys <> Sysname & Sys /= 'ALL' Then Iterate
  Dsn = Strip(Dsn,"B","'")
  Call CheckDsn Dsn
End


Return
/*-------------------------------------------------------------------*/
/*- check to see if the dsn exists and edit it                      -*/
/*-------------------------------------------------------------------*/
CheckDsn:

Arg Dsn
CheckDsn = "'" || Dsn || "(" || Source || ")'"
If SYSDSN(CheckDsn) <> 'OK' Then Return
iEdit = Edit.0
iEdit = iEdit + 1
Edit.iEdit = Dsn
Edit.0 = iEdit

Return
