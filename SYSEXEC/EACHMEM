/* rexx */
/*-------------------------------------------------------------------*/
/*- this exec will process each member of a pds and call the        -*/
/*- passed rexx exec for each one. it's meant as a generalized      -*/
/*- service to process all members of a pds. if runexec has parms   -*/
/*- to pass, then pass the whole command in double quotes so i can  -*/
/*- parse it out properly, eg:                                      -*/
/*- %EACHMEM pds.dataset.name "execname arg1 arg2" 99               -*/
/*- if you need to compress the lib every so often, pass the number -*/
/*- of members to process between each compress in arg 'compress'.  -*/
/*-------------------------------------------------------------------*/
Arg Dsn '"' RunExec '"' Compress .
If RunExec = '' Then Arg Dsn RunExec Compress .

Signal On Failure
Signal On Syntax
Signal On Novalue

Call MainRoutine

Return
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
If Sysvar('SYSISPF') = 'ACTIVE' Then Do
  ZISPFRC = 12
  Address ISPEXEC "VPUT ZISPFRC SHARED"
End
Return
/*-------------------------------------------------------------------*/
/*- The main exec routine.                                          -*/
/*-------------------------------------------------------------------*/
MainRoutine:

Dsn = PrefDsn(Dsn)

/* the number of members to process before compressing pds */
If Compress = '' Then Compress = 0
If Datatype(Compress) <> 'NUM' Then Do
  Say 'Compress parm' Compress 'should be numeric!'
  Say 'Defaulting to no compress.'
  Compress = 0
End

x = Outtrap('Mem.')
"LISTD '"Dsn"' MEMBERS"
SaveRc = RC
x = Outtrap('OFF')
If SaveRc > 0 Then Do
  Say 'RC='SaveRC 'from LISTD command on dataset' Dsn
  Signal Failure
End
Do iMem = 1 To Mem.0
  If Mem.iMem = "--MEMBERS--" Then Leave
End

Count = 0
Do iMem = iMem + 1 To Mem.0
  Mem = Strip(Mem.iMem)
  Say "EACHMEM processing member" Mem

  DsnMem = "'"Dsn"("Mem")'"

  Signal OFF NOVALUE
  Interpret 'Call' RunExec '"'DsnMem'"'
  Signal ON NOVALUE

  If Compress > 0 Then Count = Count + 1
  If Count > Compress Then Do
    Count = 0
    "%COMPRESS '"Dsn"'"
  End
End

If Compress > 0 & Count > 0 Then "%COMPRESS '"Dsn"'"

Return
