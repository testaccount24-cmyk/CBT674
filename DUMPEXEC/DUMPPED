/* rexx */
Arg DumpIn .

Signal On Failure
Signal On Syntax
Signal On Novalue

Return Main_Routine()
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
Parse Source Source
Call DUMPCLN 'NOTAB',Source
Return
/*-------------------------------------------------------------------*/
/*- Uh-oh! a dump occured. go see whaz up.                          -*/
/*-------------------------------------------------------------------*/
Main_Routine:

Say '>>>>>DUMPPED: Processing' DumpIn

DumpIn = Strip(DumpIn,"B","'")
If DumpIn = '' Then Signal Failure
/* do an ipcs analysis on it. */
DumpIn = DUMPANAL(DumpIn)
If DumpIn = 12 Then Signal Failure

/* pull the title out of the dump. */
"ALLOC F(DUMPIN) DA('"DumpIn"') SHR REUSE"
"EXECIO 1 DISKR DUMPIN (FINIS"
"FREE F(DUMPIN)"
If Queued() <> 1 Then Signal Failure
Pull 89 Title 188

Parse Value GETDDATE(DumpIn) With 'D' Date ' T' Time ' S' Seq .
Prefix = Substr(DumpIn,1,LastPos('.',DumpIn))
PrintDsn = Prefix || 'IPRT'

/* try to find the job associated with the dump. */
Job = ''
If Sysvar('SYSISPF') = 'ACTIVE' Then Do
  Address ISPEXEC
  "EDIT DATASET('"PrintDsn"') MACRO(DUMPEDJB)"
  "VGET JOB SHARED"
End
If Job = '' Then Job = 'UNKNOWN'

/* get the time stamp and format a dump log record. */
Address TSO
Stamp = DUMPSTMP()
LogRec = DUMPFREC(Date,Time,Seq,Job,'DISK',' ',Title,Stamp)
Queue LogRec

/* add it to the end of the dump log. */
If DUMPLOG("MOD") = 12 Then Signal Failure
"EXECIO" Queued() "DISKW LOG (FINIS"
"FREE F(LOG)"

/* do any notifies that the dump occured. */
Call DUMPNTFY Date,Time,Job,Title

Say '>>>>>DUMPPED: Processing complete'

Return 0
