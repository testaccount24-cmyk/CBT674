/* rexx */
Arg DumpIn .

Signal On Failure
Signal On Syntax
Signal On Novalue

Return Main_Routine()
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
Parse Source Source
Call DUMPCLN 'NOTAB',Source
Return
/*-------------------------------------------------------------------*/
/*- copy a sys1.dumpxx to our naming standards and clear it.        -*/
/*-------------------------------------------------------------------*/
Main_Routine:

DumpIn = Strip(DumpIn,"B","'")
If Left(DumpIn,9) <> 'SYS1.DUMP' & Length(DumpIn) <> 11 Then
  Signal Failure

/* dump date will get the date/time of the dump */
Parse Value DUMPDATE(DumpIn) With Date Time Title
If Date = 12 Then Signal Failure
If ListDsi("'"DumpIn"'") > 4 Then Do
  Say "ListDsi failure for" DumpIn
  Say "Reason is" SYSREASON
  Signal Failure
End

/* this is where the dataset name is built for the dump, based on the*/
/* date and time quals passed Dyymmdd Thhmmss. builds a sequence     */
/* number on the end similar to the way the DD NAME command does, so */
/* that switching to dynamic dumps can share the same naming         */
/* convention as SYS1.DUMPxx. this exec would only be called then for*/
/* SYS1.DUMPxx datasets to convert them to the DD NAME names. this   */
/* does not exactly mimic the dynamic dump method, but is close      */
/* enough to be able to share naming conventions.                    */
DumpOut = ''
Do Seq = 1 To 99999
  Prefix = GETDPFX(Date,Time,Seq)
  Quals = GETDQUAL() 'DUMP'          /* double check DUMP at the end */
  Do Words(Quals) > 0                /*   just before creating it.   */
    Parse Var Quals Qual Quals
    Dsn = Prefix'.'Qual
    Sysdsn = Sysdsn("'"Dsn"'")
    If Sysdsn <> 'DATASET NOT FOUND' Then Iterate
    If Left(Sysdsn,7) = 'INVALID' Then Signal Failure
  End
  DumpOut = Prefix'.DUMP'
  Leave
End
If DumpOut = '' Then Signal Failure
Say '>>>>>DUMPCOPY: Copying' DumpIn 'to' DumpOut

"ALLOC F(DUMPOUT) DA('"DumpOut"') NEW CATALOG" ,
  "SPACE("SYSUSED")" SYSUNITS GETDALOC("TSO")
"ALLOC F(DUMPIN) DA('"DumpIn"') SHR"

/* allocate a ddir for ipcs to use. */
DDir = Prefix || '.DDIR'
"%BLSCDDIR DSNAME("DDir")" GETDALOC("IPCS")

/* do ipcs. */
Queue ,
  "COPYDUMP INFILE(DUMPIN) OUTFILE(DUMPOUT) NOPRINT NOCONFIRM CLEAR"
Queue "END"
"IPCS NOPARM"

"FREE F(DUMPIN,DUMPOUT)"

Say '>>>>>DUMPCOPY: Completed copy'

Return DumpOut
