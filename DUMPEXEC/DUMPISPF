/* rexx */
Signal On Failure
Signal On Syntax
Signal On Novalue

Return Main_Routine()
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(12);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(12);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(12);
Cleanup:
Parse Source Source
Call DUMPCLN DumpTab,Source
Return
/*-------------------------------------------------------------------*/
/*- The main exec routine.                                          -*/
/*-------------------------------------------------------------------*/
Main_Routine:

Address ISPEXEC
"VGET ZAPPLID"
If ZAPPLID \= 'SD' Then Do
  "SELECT CMD(%DUMPISPF) NEWAPPL(SD) PASSLIB"
  Exit RC
End

Parse Value LOG2TAB() With DumpTab TimeOpened .
If DumpTab = 4  Then Return 4
If DumpTab = 12 Then Signal Failure
Call DisplayTable
Call TAB2LOG DumpTab TimeOpened

Return 0
/*-------------------------------------------------------------------*/
/*- The main exec routine.                                          -*/
/*-------------------------------------------------------------------*/
DisplayTable:

Address ISPEXEC
"TBVCLEAR" DumpTab           /* hide all deleted entries */
Hold = 'D'
"TBSARG" DumpTab "NAMECOND(HOLD,NE)"
"TBSORT" DumpTab "FIELDS(DATE,N,D,TIME,N,D,SEQ,N,D)"

"SETMSG MSG(SD000)"

CURSOR = 'LC'; CSRROW = 0; ZTDTOP = 0;
Scan = 'SCAN'                            /* set to 'all' for no scan */
Do Forever
  "TBTOP" DumpTab
  "TBSKIP" DumpTab "NUMBER("ZTDTOP") NOREAD"
  "TBDISPL" DumpTab "PANEL(SDMAIN1) POSITION(CRP) ROWID(ROW)" ,
    "AUTOSEL(NO) CSRROW("CSRROW") CURSOR("CURSOR")"
  If RC > 8 Then Signal Failure
  If RC > 4 Then Leave
  CURSOR = 'ZCMD'

  If ZCMD <> '' Then Do                  /* primary commands go here */
    Upper ZCMD
    Parse Var ZCMD Verb Rest
    Verb = Word(ZCMD,1)
    Select
      When Verb = 'SYNC' Then Call Sync Rest
      When Verb = 'SAVE' Then Call Save Rest
      When Verb = 'SORT' Then Call Sort Rest
      When Verb = 'SORTCOMP' Then Call Sorttb DumpTab
      Otherwise Nop
    End
  End

  Do While ZTDSELS > 0                      /* line commands go here */
    Upper LC
    If Status = 'PEND' & LC <> 'Y' Then "SETMSG MSG(SD003)"
    Else If Hold = 'H' & WordPos(LC,'DD A AS R RS') > 0 Then
      "SETMSG MSG(SD004)"
    Else Select
      When LC = 'S'  Then Call Select
      When LC = 'N'  Then Call Notes
      When LC = 'I'  Then Call Info
      When LC = 'H'  Then Call Hold
      When LC = 'DD' Then Call Delete
      When LC = 'A'  Then Call Archive
      When LC = 'AS' Then Call Archive 'SUBMIT'
      When LC = 'R'  Then Call Recall
      When LC = 'RS' Then Call Recall 'SUBMIT'
      When LC = 'T'  Then Call Terse
      When LC = 'TS' Then Call Terse 'SUBMIT'
      When LC = 'F'  Then Call Ftp
      When LC = 'TF' Then Call TerseFtp
      When LC = 'IP' Then Call Ipcs
      When LC = 'Y'  Then Call SyncOne
      Otherwise "SETMSG MSG(SD005)"
    End
    If ZTDSELS > 1 Then "TBDISPL" DumpTab "POSITION(CRP) ROWID(ROW)"
    Else ZTDSELS = 0
    CURSOR = 'LC'
  End
  LC = ' '
  "TBGET" DumpTab "POSITION(CSRROW)"       /* place cursor properly */
End

Return
/*-------------------------------------------------------------------*/
/*- the user selected a dump. display the IPRT ipcs output dataset. -*/
/*-------------------------------------------------------------------*/
Select:

Prefix = GETDPFX(Date,Time,Seq)
Print = Prefix'.IPRT'

"CONTROL DISPLAY SAVE"
"CONTROL ERRORS RETURN"
"VIEW DATASET('"Print"')"
SaveRC = RC
"CONTROL ERRORS CANCEL"
"CONTROL DISPLAY RESTORE"
If SaveRC > 0 Then "SETMSG MSG(SD012)"

Return
/*-------------------------------------------------------------------*/
/*- the user wants to open a notes dataset for the dump.            -*/
/*-------------------------------------------------------------------*/
Notes:

Prefix = GETDPFX(Date,Time,Seq)
Notes = Prefix'.NOTES'

Sysdsn = Sysdsn("'"Notes"'")
If Sysdsn = "DATASET NOT FOUND" Then Do
  Address TSO
  "ALLOC F(NOTES) DA('"Notes"') NEW CATALOG" ,
    "SPACE(4 2) TRACKS LRECL(133) RECFM(F B) DSORG(PS)" ,
    GETDALOC("TSO")
  "FREE F(NOTES)"
  Address ISPEXEC
End

"CONTROL DISPLAY SAVE"
"CONTROL ERRORS RETURN"
"EDIT DATASET('"Notes"')"
SaveRC = RC
"CONTROL ERRORS CANCEL"
"CONTROL DISPLAY RESTORE"
If SaveRC > 0 Then "SETMSG MSG(SD012)"

Return
/*-------------------------------------------------------------------*/
/*- the user wants info on the dataset. display the info panel.     -*/
/*-------------------------------------------------------------------*/
Info:

Parse Var Title TITLE1 51 TITLE2
Parse Var Time HH 3 MM 5 SS
TIMEN = HH':'MM':'SS
DATEN = Left(Date('S'),2) || Date
DATEN = Date('N',DATEN,'S')
"CONTROL DISPLAY SAVE"
"ADDPOP"
"DISPLAY PANEL(SDINFO)"
"REMPOP"
"CONTROL DISPLAY RESTORE"

Return
/*-------------------------------------------------------------------*/
/*- toggle the old value of the dump.                               -*/
/*-------------------------------------------------------------------*/
Hold:

If Hold = 'H' Then Hold = ' '
Else Hold = 'H'
Stamp = DUMPSTMP()
"TBMOD" DumpTab
"SETMSG MSG(SD000)"

Return
/*-------------------------------------------------------------------*/
/*- delete the dump (when the tab2log exec is called).              -*/
/*-------------------------------------------------------------------*/
Delete:

Hold = 'D'
Stamp = DUMPSTMP()
"TBMOD" DumpTab
"SETMSG MSG(SD006)"

Return
/*-------------------------------------------------------------------*/
/*- archive the dump.                                               -*/
/*-------------------------------------------------------------------*/
Archive:
Arg Submit .

Prefix = GETDPFX(Date,Time,Seq)
Parse Value DUMPSTAT(Prefix) With Status1 Status2 .
If Status1 = 'DISK' & Status2 = 'TAPE' Then Do
  x = Msg('OFF')
  Address TSO "DELETE '"Prefix".TAPE'"
  x = Msg(x)
End
Else If Status1 = 'TAPE' Then Do
  "SETMSG MSG(SD007)"
  Return
End

If DUMPARCJ(Prefix) = 12 Then Signal Failure
Call EditSubmit Submit

Status = 'PEND'
Stamp = DUMPSTMP()
"TBMOD" DumpTab

Return
/*-------------------------------------------------------------------*/
/*- recall the dump.                                                -*/
/*-------------------------------------------------------------------*/
Recall:
Arg Submit .

Prefix = GETDPFX(Date,Time,Seq)
If Word(DUMPSTAT(Prefix),1) = 'DISK' Then Do
  "SETMSG MSG(SD008)"
  Return
End

"FTOPEN TEMP";     If RC <> 0 Then Signal Failure
"FTINCL JOBCARD";  If RC <> 0 Then Signal Failure
"FTINCL RECALL";   If RC <> 0 Then Signal Failure
"FTCLOSE";         If RC <> 0 Then Signal Failure

Call EditSubmit Submit

Status = 'PEND'
Hold = 'H'
Stamp = DUMPSTMP()
"TBMOD" DumpTab

Return
/*-------------------------------------------------------------------*/
/*- terse the dump.                                                 -*/
/*-------------------------------------------------------------------*/
Terse:
Arg Submit .

Prefix = GETDPFX(Date,Time,Seq)
Sysdsn = Sysdsn("'"Prefix".TRS'")
If Sysdsn = 'OK' Then Do
  "SETMSG MSG(SD009)"
  Return
End

Parse Value DUMPSTAT(Prefix) With Status1 .
If Status1 = 'TAPE' Then Do
  "SETMSG MSG(SD010)"
  Return
End

If ListDsi("'"Prefix".DUMP'") > 4 Then Do
  Say "ListDsi failure for" Prefix".DUMP"
  Say "Reason is" SYSREASON
  Signal Failure
End
If SYSUNITS = "CYLINDER" Then SYSUNITS = "CYL"
If SYSUNITS = "TRACK" Then SYSUNITS = "TRK"
Space = "SPACE=("SYSUNITS",("SYSUSED%1.8","SYSUSED%3"),RLSE)"
Alloc = GETDALOC('JCL')

"FTOPEN TEMP";     If RC <> 0 Then Signal Failure
"FTINCL JOBCARD";  If RC <> 0 Then Signal Failure
"FTINCL TERSE";    If RC <> 0 Then Signal Failure
"FTCLOSE";         If RC <> 0 Then Signal Failure

Call EditSubmit Submit

Return
/*-------------------------------------------------------------------*/
/*- ftp the dump.                                                   -*/
/*-------------------------------------------------------------------*/
Ftp:

Prefix = GETDPFX(Date,Time,Seq)
Dsn = Prefix'.TRS'
Sysdsn = Sysdsn("'"Dsn"'")
If Sysdsn = 'DATASET NOT FOUND' Then Do
  "SETMSG MSG(SD011)"
  Return
End

"ADDPOP"
"DISPLAY PANEL(SDFTP)"
SaveRC = RC
"REMPOP"
If SaveRC > 0 Then Return

FTPDIR = Strip(FTPDIR1) || Strip(FTPDIR2)
"FTOPEN TEMP";     If RC <> 0 Then Signal Failure
"FTINCL JOBCARD";  If RC <> 0 Then Signal Failure
"FTINCL FTP";      If RC <> 0 Then Signal Failure
"FTCLOSE";         If RC <> 0 Then Signal Failure

Call EditSubmit

Return
/*-------------------------------------------------------------------*/
/*- terse and ftp the dump.                                         -*/
/*-------------------------------------------------------------------*/
TerseFtp:

Prefix = GETDPFX(Date,Time,Seq)
Sysdsn = Sysdsn("'"Prefix".TRS'")
If Sysdsn = 'OK' Then Do
  "SETMSG MSG(SD009)"
  Return
End

Parse Value DUMPSTAT(Prefix) With Status1 .
If Status1 = 'TAPE' Then Do
  "SETMSG MSG(SD010)"
  Return
End

If ListDsi("'"Prefix".DUMP'") > 4 Then Do
  Say "ListDsi failure for" Prefix".DUMP"
  Say "Reason is" SYSREASON
  Signal Failure
End
If SYSUNITS = "CYLINDER" Then SYSUNITS = "CYL"
If SYSUNITS = "TRACK" Then SYSUNITS = "TRK"
Space = "SPACE=("SYSUNITS",("SYSUSED%1.8","SYSUSED%3"),RLSE)"
Alloc = GETDALOC('JCL')

Dsn = Prefix'.TRS'
"ADDPOP"
"DISPLAY PANEL(SDFTP)"
SaveRC = RC
"REMPOP"
If SaveRC > 0 Then Return

FTPDIR = Strip(FTPDIR1) || Strip(FTPDIR2)
"FTOPEN TEMP";     If RC <> 0 Then Signal Failure
"FTINCL JOBCARD";  If RC <> 0 Then Signal Failure
"FTINCL TERSE";    If RC <> 0 Then Signal Failure
"FTINCL FTP";      If RC <> 0 Then Signal Failure
"FTCLOSE";         If RC <> 0 Then Signal Failure

Call EditSubmit

Return
/*-------------------------------------------------------------------*/
/*- invoke ipcs on the dump.                                        -*/
/*-------------------------------------------------------------------*/
Ipcs:

Prefix = GETDPFX(Date,Time,Seq)
DDir = Prefix'.DDIR'
Parse Value DUMPSTAT(Prefix) With Status1 .
If Status1 = 'TAPE' Then Do
  "SETMSG MSG(SD010)"
  Return
End

Address TSO "%BLSCDDIR DSNAME('"DDir"')"
"SETMSG MSG(SD013)"
"SELECT CMD(%BLSCLIBD) NEWAPPL(BLSG) PASSLIB"
Address TSO "FREE F(IPCSDDIR)"

Return
/*-------------------------------------------------------------------*/
/*- syncronize the status of one of the dumps.                      -*/
/*-------------------------------------------------------------------*/
SyncOne:

Prefix = GETDPFX(Date,Time,Seq)
Parse Value DUMPSTAT(Prefix) With Status1 .
If Status1 = Status Then Return

Status = Status1
Stamp = DUMPSTMP()
"TBMOD" DumpTab

Return
/*-------------------------------------------------------------------*/
/*- sync the status of all of the dumps in the table.               -*/
/*-------------------------------------------------------------------*/
Sync:
Arg Scope .

If Scope = 'ALL' Then Do
  "TBSTATS" DumpTab "ROWCURR(ROWS)"
  If Rows > 10 Then
    Say 'Syncing all dumps, this may take a sec'
End

"TBTOP" DumpTab
Do Forever
  "TBSKIP" DumpTab "NUMBER(1)"
  If RC > 0 Then Leave
  If Scope <> 'ALL' & Status <> 'PEND' Then Iterate
  Call SyncOne
End
"SETMSG MSG(SD002)"

Return
/*-------------------------------------------------------------------*/
/*- save the table and start all over again                         -*/
/*-------------------------------------------------------------------*/
Save:

Call TAB2LOG DumpTab TimeOpened
Parse Value LOG2TAB() With DumpTab TimeOpened .
If DumpTab = 4 | DumpTab = 12 Then Signal Failure

"TBVCLEAR" DumpTab           /* hide all deleted entries */
Hold = 'D'
"TBSARG" DumpTab "NAMECOND(HOLD,NE)"
"TBSORT" DumpTab "FIELDS(DATE,N,D,TIME,N,D,SEQ,N,D)"
"SETMSG MSG(SD001)"

Return
/*-------------------------------------------------------------------*/
/*- sort by the passed fields.                                      -*/
/*-------------------------------------------------------------------*/
Sort:
Arg By .

If By = '' Then By = 'DATE,N,D,TIME,N,D,SEQ,N,D'
Else By = By',C,A'
"CONTROL ERRORS RETURN"
"TBSORT" DumpTab "FIELDS("By")"
SaveRC = RC
"CONTROL ERRORS CANCEL"
If SaveRC > 0 Then "SETMSG MSG(SD012)"

Return
/*-------------------------------------------------------------------*/
/*- edit or submit whatever is in the file tailoring dataset.       -*/
/*-------------------------------------------------------------------*/
EditSubmit:
Arg Submit .

"VGET ZTEMPN SHARED"
If RC <> 0 Then Signal Failure

If Submit = 'SUBMIT' Then Do
  Address TSO
  "EXECIO * DISKR" ZTEMPN "(FINIS"
  Queue ''
  "SUBMIT *"
  Address ISPEXEC
End
Else Do
  "LMINIT DATAID(DATAID) DDNAME("ZTEMPN")"
  "CONTROL DISPLAY SAVE"
  "EDIT DATAID("DATAID")"
  "CONTROL DISPLAY RESTORE"
  "LMFREE DATAID("DATAID")"
End

Return
